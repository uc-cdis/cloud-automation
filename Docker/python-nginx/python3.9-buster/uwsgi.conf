server {
    #
    # Accomodate large jwt token headers
    # * http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size
    # * https://ma.ttias.be/nginx-proxy-upstream-sent-big-header-reading-response-header-upstream/
    #
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
    #
    # also incoming from client:
    # * https://fullvalence.com/2016/07/05/cookie-size-in-nginx/
    # * https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size
    large_client_header_buffers 4 128k;
    client_header_buffer_size 64k;

    listen       6567;

    root /var/www/metrics;

    location /aggregated_metrics {
        types {}
        default_type text/plain;
        try_files $uri $uri/ /metrics.txt;
        autoindex on;
        access_log off;
    }
}

server {
    listen 80;

    large_client_header_buffers 4 64k;

    location / {
        uwsgi_param REMOTE_ADDR $http_x_forwarded_for if_not_empty;
        uwsgi_param REMOTE_USER $http_x_userid if_not_empty;
        uwsgi_param REMOTE_REQID $http_x_reqid if_not_empty;
        uwsgi_param REMOTE_SESSIONID $http_x_sessionid if_not_empty;
        uwsgi_param REMOTE_VISITORID $http_x_visitorid if_not_empty;
        uwsgi_param GEN3_REQUEST_TIMESTAMP $msec;
        uwsgi_param GEN3_TIMEOUT_SECONDS GEN3_UWSGI_TIMEOUT;

        include uwsgi_params;
        uwsgi_pass unix:/var/run/gen3/uwsgi.sock;
        uwsgi_read_timeout GEN3_UWSGI_TIMEOUT;
        uwsgi_send_timeout GEN3_UWSGI_TIMEOUT;
    }

    location /_status {
        include uwsgi_params;
        uwsgi_pass unix:/var/run/gen3/uwsgi.sock;
        uwsgi_param GEN3_REQUEST_TIMESTAMP $msec;
        uwsgi_param GEN3_TIMEOUT_SECONDS GEN3_UWSGI_TIMEOUT;
        uwsgi_read_timeout GEN3_UWSGI_TIMEOUT;
        uwsgi_ignore_client_abort on;
        access_log off;
    }

    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        deny all;
        access_log off;
    }

    location /uwsgi_status {
        proxy_pass "http://127.0.0.1:9191";
        allow 127.0.0.1;
        deny all;
        access_log off;
    }

    error_page 502 /502.html;
    location /502.html {
        return 504 '{"error": "Request Timeout or Service Unavailable"}';
    }

    error_page 504 /504.html;
    location /504.html {
        return 504 '{"error": "Request Timeout"}';
    }
}
