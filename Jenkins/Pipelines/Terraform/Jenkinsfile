#!groovy

pipeline {
  agent any

  stages {
    stage('FetchCode'){
      steps {
        checkout scm
        dir('Secrets') {
            sh 'aws s3 cp s3://cdis-terraform-state/planx-pla.net/v1/config.tfvars config.tfvars'
            sh 'aws s3 cp s3://cdis-terraform-state/planx-pla.net/v1/backend.tfvars backend.tfvars'
        }
      }
    }
    stage('Prep') {
      steps {
        dir('Secrets') {
          sh 'terraform init -backend-config /mnt/Secrets/terraform/aws.backend.tfvars -backend-config backend.tfvars ../tf_files/aws'
        }
        dir('SecretsNoPlan') {
          sh 'cp ../Secrets/*.tfvars .'
          sh 'echo \'key = "noplan/terraform.tfstate"\' > noplan.tfvars'
          sh 'terraform init -backend-config /mnt/Secrets/terraform/aws.backend.tfvars -backend-config backend.tfvars --backend-config noplan.tfvars ../tf_files/aws'
        }
      }
    }
    stage('Plan - no state') {
      steps {
        dir('SecretsNoPlan') {
          echo 'Planning - no state ...'
          sh 'terraform plan --var-file /mnt/Secrets/terraform/aws.tfvars --var-file config.tfvars ../tf_files/aws'
        }
      }
    }
    stage('Plan planx-pla.net/v1 state') {
      steps {
        dir('Secrets') {
          echo 'Planning ...'
          sh 'terraform plan --var-file /mnt/Secrets/terraform/aws.tfvars --var-file config.tfvars -out plan.terraform ../tf_files/aws'
        }
      }
    }
    stage('Apply') {
      steps {
        timeout(time: 60, unit: 'SECONDS') {
          input 'Do you want to apply the terraform plan?'
        }
        echo 'Applying plan ...'
        dir('Secrets') {
          sh 'terraform apply plan.terraform'
        }
      }
    }
  }
}
