apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config
data:
  jupyterhub_config.py: |-
    import os
    c.JupyterHub.base_url = '/workspace'
    c.JupyterHub.confirm_no_ssl = True
    c.JupyterHub.db_url = 'sqlite:////etc/config/jupyterhub.sqlite'
    c.JupyterHub.cookie_secret_file = '/etc/config/jupyterhub_cookie_secret'
    c.JupyterHub.authenticator_class = 'jhub_remote_user_authenticator.remote_user_auth.RemoteUserAuthenticator'
    #c.ConfigurableHTTPProxy.debug = True
    c.JupyterHub.log_level = 'DEBUG'
    c.JupyterHub.services = [
        {
            'name': 'cull-idle',
            'admin': True,
            'command': 'python /usr/local/bin/cull_idle_servers.py --timeout=3600'.split(),
        }
    ]
    c.JupyterHub.spawner_class = 'kubespawner.KubeSpawner'
    c.KubeSpawner.namespace = 'jupyter-pods'
    c.KubeSpawner.cpu_limit = 1.0
    c.KubeSpawner.mem_limit = '1.5G'
    #c.KubeSpawner.debug = False
    c.KubeSpawner.notebook_dir = '/home/jovyan/pd'
    c.KubeSpawner.singleuser_uid = 1000
    c.KubeSpawner.singleuser_fs_gid = 1000
    c.KubeSpawner.user_storage_pvc_ensure = True
    c.KubeSpawner.user_storage_capacity = '10Gi'
    c.KubeSpawner.pvc_name_template = 'claim-{username}{servername}'
    c.KubeSpawner.user_storage_class = 'jupyter-storage'
    c.KubeSpawner.volumes = [
        {
            'name': 'volume-{username}{servername}',
            'persistentVolumeClaim': {
                'claimName': 'claim-{username}{servername}'
            }
        }
    ]
    c.KubeSpawner.volume_mounts = [
        {
            'mountPath': '/home/jovyan/pd',
            'name': 'volume-{username}{servername}'
        }
    ]
    c.KubeSpawner.hub_connect_ip = 'jupyterhub-service.%s' % (os.environ['POD_NAMESPACE'])
    c.KubeSpawner.hub_connect_port = 8000
    c.KubeSpawner.profile_list = [
        {
            'display_name': 'Base Python - Micro',
            'kubespawner_override': {
                'singleuser_image_spec': 'jupyter/minimal-notebook:d29a0f617484',
                'cpu_limit': 0.1,
                'mem_limit': '128M',
            }
        },
        {
            'display_name': 'Bioinfo - Python/R - Small',
            'kubespawner_override': {
                'singleuser_image_spec': 'quay.io/occ_data/jupyternotebook@sha256:958f276424737ff9a3887606cf1ba0bec29d1f0316c90e8365545de1fcfb0c0e',
                'cpu_limit': 0.25,
                'mem_limit': '256M',
            }
        },
        {
            'display_name': 'Bioinfo - Python/R - Large',
            'kubespawner_override': {
                'singleuser_image_spec': 'quay.io/occ_data/jupyternotebook@sha256:958f276424737ff9a3887606cf1ba0bec29d1f0316c90e8365545de1fcfb0c0e',
                'cpu_limit': 1.0,
                'mem_limit': '1.5G',
            }
        },
        {
            'display_name': 'Earth - Python - Small',
            'kubespawner_override': {
                'singleuser_image_spec': 'quay.io/occ_data/jupyter-geo@sha256:3428f82630a2363280409b5cb19d9ddc2e39f4716c5393a8ec80677c365ecc30',
                'cpu_limit': 0.25,
                'mem_limit': '256M',
            }
        },
        {
            'display_name': 'Earth - Python - Large',
            'kubespawner_override': {
                'singleuser_image_spec': 'quay.io/occ_data/jupyter-geo@sha256:3428f82630a2363280409b5cb19d9ddc2e39f4716c5393a8ec80677c365ecc30',
                'cpu_limit': 1.0,
                'mem_limit': '1.5G',
            }
        }
    ]
    c.KubeSpawner.cmd = 'start-singleuser.sh'
    c.KubeSpawner.args = ['--allow-root --hub-api-url=http://%s:%d%s/hub/api --hub-prefix=https://%s%s/' % (
        c.KubeSpawner.hub_connect_ip, c.KubeSpawner.hub_connect_port, c.JupyterHub.base_url, os.environ['HOSTNAME'], c.JupyterHub.base_url)]
    # First pulls can be really slow, so let's give it a big timeout
    c.KubeSpawner.start_timeout = 60 * 10
    # Don't try to cleanup servers on exit - since in general for k8s, we want
    # the hub to be able to restart without losing user containers
    c.JupyterHub.cleanup_servers = False
    c.JupyterHub.ip = '0.0.0.0'
    c.JupyterHub.hub_ip = '0.0.0.0'
    #c.Authenticator.admin_users = {'razorm@gmail.com'}
