apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: gpu
spec:
  subnetSelector:
    karpenter.sh/discovery: VPC_NAME
  securityGroupSelector:
    karpenter.sh/discovery: VPC_NAME-gpu
  tags:
    Environment: VPC_NAME
    Name: eks-VPC_NAME-gpu-karpenter
    karpenter.sh/discovery: VPC_NAME
    purpose: gpu
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: optional
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash -x
    instanceId=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceId)
    curl https://raw.githubusercontent.com/uc-cdis/cloud-automation/master/files/authorized_keys/ops_team >> /home/ec2-user/.ssh/authorized_keys

    echo "$(jq '.registryPullQPS=0' /etc/kubernetes/kubelet/kubelet-config.json)" > /etc/kubernetes/kubelet/kubelet-config.json

    sysctl -w fs.inotify.max_user_watches=12000

    sudo yum update -y
    sudo yum install -y dracut-fips openssl >> /opt/fips-install.log
    sudo  dracut -f
    # configure grub
    sudo /sbin/grubby --update-kernel=ALL --args="fips=1"

    --BOUNDARY
    Content-Type: text/cloud-config; charset="us-ascii"

    power_state:
      delay: now
      mode: reboot
      message: Powering off
      timeout: 2
      condition: true

    --BOUNDARY--
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 200Gi
        volumeType: gp2
        encrypted: true
        deleteOnTermination: true
