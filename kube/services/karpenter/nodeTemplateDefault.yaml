apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  amiSelector:
    aws::name: EKS-FIPS*
    aws::owners: "143731057154"
  subnetSelector:
    karpenter.sh/discovery: VPC_NAME
  securityGroupSelector:
    karpenter.sh/discovery: VPC_NAME
  tags:
    karpenter.sh/discovery: VPC_NAME
    Environment: VPC_NAME
    Name: eks-VPC_NAME-karpenter
    purpose: default
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: optional
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash -x
    instanceId=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceId)
    curl https://raw.githubusercontent.com/uc-cdis/cloud-automation/master/files/authorized_keys/ops_team >> /home/ec2-user/.ssh/authorized_keys

    echo "$(jq '.registryPullQPS=0' /etc/kubernetes/kubelet/kubelet-config.json)" > /etc/kubernetes/kubelet/kubelet-config.json

    sysctl -w fs.inotify.max_user_watches=12000

    # --BOUNDARY
    # Content-Type: text/cloud-config; charset="us-ascii"

    # mounts:
    #   - ['fstype': 'bpf', 'mountpoint': '/sys/fs/bpf', 'opts': 'rw,relatime']

    --BOUNDARY--
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 50Gi
        volumeType: gp2
        encrypted: true
        deleteOnTermination: true
