apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-es-proxy-deployment
  annotations:
    gen3.io/network-ingress: "arranger,arranger-server,arranger-dashboard,guppy,metadata,spark,tube"
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: esproxy
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: esproxy
        netvpc: "yes"
        GEN3_DATE_LABEL
        GEN3_HOSTNAME_LABEL
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      volumes:
        - name: credentials
          secret:
            secretName: "aws-es-proxy"
      priorityClassName: aws-es-proxy-high-priority
      containers:
      - name: esproxy
        GEN3_AWS-ES-PROXY_IMAGE|-image: quay.io/cdis/aws-es-proxy:0.8-|
        imagePullPolicy: Always
        ports:
        - containerPort: 9200
        env:
          - name: "ENDPOINT"
            GEN3_ES_ENDPOINT|-value: http://es.internal.io-|
          - name: "AWS_ACCESS_KEY_ID"
            valueFrom:
              secretKeyRef:
                name: "aws-es-proxy"
                key: "aws_access_key_id"
          - name: "AWS_SECRET_ACCESS_KEY"
            valueFrom:
              secretKeyRef:
                name: "aws-es-proxy"
                key: "aws_secret_access_key"
        volumeMounts:
          - name: "credentials"
            readOnly: true
            mountPath: "/root/.aws"
        command: ["/aws-es-proxy"]
        args: ["-timeout", "180", "-verbose", "-listen", ":9200"]
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 2Gi
