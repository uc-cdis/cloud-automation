#
# Gen3 customization of fluent config. 
# - tries to extract structure from gen3 service logs
# - includes the default conf at the bottom - just adds prefix rules
# 
# Deploy by:
# - mount this file into the container at /fluentd/etc/gen3.conf
# - set environment variable FLUENTD_CONF=gen3.conf
#
#   https://www.fluentd.org/guides/recipes/docker-logging
#   https://docs.fluentd.org/v0.12/articles/config-file#introduction:-the-life-of-a-fluentd-event
#   https://docs.fluentd.org/v1.0/articles/out_rewrite_tag_filter

<label @FLUENT_LOG>
  <match fluent.**>
    @type null
  </match>
</label>


<source>
  @type tail
  @id in_tail_container_logs
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag "#{ENV['FLUENT_CONTAINER_TAIL_TAG'] || 'kubernetes.*'}"
  exclude_path "#{ENV['FLUENT_CONTAINER_TAIL_EXCLUDE_PATH'] || use_default}"
  read_from_head true
  <parse>
    @type "#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'json'}"
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>

<source>
  @type tail
  path /var/log/messages
  pos_file /var/log/host-messages.log.pos
  <parse>
    @type syslog
  </parse>
  tag host.messages
</source>


<source>
  @type tail
  path /var/log/secure
  pos_file /var/log/host-secure.log.pos
  <parse>
    @type syslog
  </parse>
  tag host.secure
</source>

<source>
  @type tail
  @id in_tail_docker
  path /var/log/docker.log
  pos_file /var/log/fluentd-docker.log.pos
  tag docker
  <parse>
    @type regexp
    expression /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
  </parse>
</source>


<source>
  @type tail
  @id in_tail_kubelet
  multiline_flush_interval 5s
  path /var/log/kubelet.log
  pos_file /var/log/fluentd-kubelet.log.pos
  tag kubelet
  <parse>
    @type kubernetes
  </parse>
</source>



<filter kubernetes.**>
  @type kubernetes_metadata
  @id filter_kube_metadata
  kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
  verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
  ca_file "#{ENV['KUBERNETES_CA_FILE']}"
  skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
  skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
  skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
  skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
</filter>

<match kubernetes.var.log.containers.**_kube-system_**>
  @type null
</match>

<match kubernetes.var.log.containers.**_logging_**>
  @type null
</match>

<match docker>
  @type rewrite_tag_filter
  <rule>
    key $._HOSTNAME
    pattern ^(.+)$
    tag $1.docker
  </rule>
</match>

<match kubelet>
  @type rewrite_tag_filter
  <rule>
    key $._HOSTNAME
    pattern ^(.+)$
    tag $1.kubelet
  </rule>
</match>

<match host.messages>
  @type rewrite_tag_filter
  <rule>
    key $.host
    pattern ^(.+)$
    tag $1.messages
  </rule>
</match>

<match host.secure>
  @type rewrite_tag_filter
  <rule>
    key $.host
    pattern ^(.+)$
    tag $1.secure
  </rule>
</match>

<match kubernetes.var.**>
  @type rewrite_tag_filter
  <rule>
    # json structured log - consider adoption a standard json schema:
    #    https://github.com/timberio/log-event-json-schema
    key log
    pattern /^\{\s*"gen3log":/
    tag kubernetes.gen3.json.${tag}
  </rule>
  <rule>
    # combined log format - default Apache and nginx structure
    #    https://httpd.apache.org/docs/1.3/logs.html#combined
    key log
    pattern /^(((\d+\.\d+\.\d+\.\d+)|-)\s+){2}\S+\s+\[\d\d?\//
    tag kubernetes.gen3.combined.${tag}
  </rule>
  <rule>
    # unstructured log line
    key log
    pattern /\S/
    tag kubernetes.gen3.raw.${tag}
  </rule>

</match>

<filter kubernetes.gen3.json.**>
  @type record_transformer
  <record>
    log_type json
    # This one doesn't work for whatever reason, if you do ${record["kubernetes"]} the whole blob would be added, but can't access subobjects 
    #container_name ${record["kubernetes"]["container_name"]}
  </record>
</filter>

<filter kubernetes.gen3.combined.**>
  @type record_transformer
  <record>
    log_type combined
  </record>
</filter>

<filter kubernetes.gen3.raw.**>
  @type record_transformer
  <record>
    log_type raw
  </record>
</filter>

<match kubernetes.gen3.**>
  @type rewrite_tag_filter
  <rule>
    key $.kubernetes.pod_name
    pattern ^(.+)$
    tag "#{Time.now.strftime('%Y-%m-%d')}.$1"
  </rule>
#  <rule>
#    key $.kubernetes
#    pattern ^(.+)$
#    tag $1.container_name
#  </rule>
</match>

#<match "#{Time.now.strftime('%Y-%m-%d')}.**">
#  @type rewrite_tag_filter
#  <rule>
#    key $.kubernetes.container_name
#    pattern ^(.+)$
    #tag $1.${tag}
#    tag ${tag}.$1
#  </rule>
#</match>

# TODO:
# * python stack traces: "Traceback (most recent call last):""
#     https://docs.fluentd.org/v0.12/articles/parser_multiline#formatn
#
# Idea: add `visitor` cookie to revproxy ...


<match **>
  @type cloudwatch_logs
  @id out_cloudwatch_logs
  log_group_name "#{ENV['LOG_GROUP_NAME']}"
  auto_create_stream true
  use_tag_as_stream true
  retention_in_days "#{ENV['RETENTION_IN_DAYS'] || 'nil'}"
  json_handler yajl # To avoid UndefinedConversionError
  log_rejected_request "#{ENV['LOG_REJECTED_REQUEST']}" # Log rejected request for missing parts
</match>


#@include fluent.conf
#@include conf.d/*.conf
