---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: presigned-url-fence-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: presigned-url-fence
      release: production
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /aggregated_metrics
        prometheus.io/port: "6567"
      labels:
        app: presigned-url-fence
        release: production
        # for network policy selectors
        authprovider: "yes"
        # uses explicit proxy and AWS APIs
        netnolimit: "yes"
        public: "yes"
        userhelper: "yes"
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - presigned-url-fence
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
        - name: yaml-merge
          configMap:
            name: "fence-yaml-merge"
# -----------------------------------------------------------------------------
# DEPRECATED! Remove when all commons are no longer using local_settings.py
#             for fence
# -----------------------------------------------------------------------------
        - name: old-config-volume
          secret:
            secretName: "fence-secret"
        - name: json-secret-volume
          secret:
            secretName: "fence-json-secret"
        - name: creds-volume
          secret:
            secretName: "fence-creds"
        - name: config-helper
          configMap:
            name: config-helper
# -----------------------------------------------------------------------------
        - name: logo-volume
          configMap:
            name: "logo-config"
        - name: config-volume
          secret:
            secretName: "fence-config"
        - name: fence-google-app-creds-secret-volume
          secret:
            secretName: "fence-google-app-creds-secret"
        - name: fence-google-storage-creds-secret-volume
          secret:
            secretName: "fence-google-storage-creds-secret"
        - name: fence-jwt-keys
          secret:
            secretName: "fence-jwt-keys"
        - name: cert-volume
          secret:
            secretName: "cert-fence-service"
        - name: ca-volume
          secret:
            secretName: "service-ca"
        - name: privacy-policy
          configMap:
            name: "privacy-policy"
        - name: logs-folder
          emptyDir: {}
      securityContext:
        # nginx group in current images
        fsGroup: 101
      containers:
      - name: fence
        GEN3_FENCE_IMAGE
        env:
        - name: NGINX_RATE_LIMIT
          value: "6"
        - name: PYTHONPATH
          value: /var/www/fence
        - name: AWS_STS_REGIONAL_ENDPOINTS
          value: regional
        - name: GEN3_DEBUG
          GEN3_DEBUG_FLAG|-value: "False"-|
        - name: FENCE_PUBLIC_CONFIG
          valueFrom:
            configMapKeyRef:
              name: manifest-fence
              key: fence-config-public.yaml
              optional: true
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /_status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /_status
            port: 80
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
# -----------------------------------------------------------------------------
# DEPRECATED! Remove when all commons are no longer using local_settings.py
#             for fence.
# -----------------------------------------------------------------------------
          - name: "old-config-volume"
            readOnly: true
            mountPath: "/var/www/fence/local_settings.py"
            subPath: local_settings.py
          - name: "json-secret-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence_credentials.json"
            subPath: fence_credentials.json
          - name: "creds-volume"
            readOnly: true
            mountPath: "/var/www/fence/creds.json"
            subPath: creds.json
          - name: "config-helper"
            readOnly: true
            mountPath: "/var/www/fence/config_helper.py"
            subPath: config_helper.py
# -----------------------------------------------------------------------------
          - name: "logo-volume"
            readOnly: true
            mountPath: "/fence/fence/static/img/logo.svg"
            subPath: "logo.svg"
          - name: "privacy-policy"
            readOnly: true
            mountPath: "/fence/fence/static/privacy_policy.md"
            subPath: "privacy_policy.md"
          - name: "config-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence-config-secret.yaml"
            subPath: fence-config.yaml
          - name: "yaml-merge"
            readOnly: true
            mountPath: "/var/www/fence/yaml_merge.py"
            subPath: yaml_merge.py
          - name: "fence-google-app-creds-secret-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence_google_app_creds_secret.json"
            subPath: fence_google_app_creds_secret.json
          - name: "fence-google-storage-creds-secret-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence_google_storage_creds_secret.json"
            subPath: fence_google_storage_creds_secret.json
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.crt"
            subPath: "service.crt"
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.key"
            subPath: "service.key"
          - name: "ca-volume"
            # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
            readOnly: true
            mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
            subPath: "ca.pem"
          - name: "fence-jwt-keys"
            readOnly: true
            mountPath: "/fence/jwt-keys.tar"
            subPath: "jwt-keys.tar"
          - name: logs-folder
            mountPath: "/mnt/nginxlogs/"
        resources:
            requests:
              cpu: 0.4
              memory: 1200Mi
            limits:
              cpu: 1.0
              memory: 2400Mi  
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            echo "${FENCE_PUBLIC_CONFIG:-""}" > "/var/www/fence/fence-config-public.yaml"
            echo -e "ENABLE_DB_MIGRATION: false" > "/var/www/fence/fence-config-bonus1.yaml"
            python /var/www/fence/yaml_merge.py /var/www/fence/fence-config-public.yaml /var/www/fence/fence-config-secret.yaml > /var/www/fence/fence-config-step1.yaml
            python /var/www/fence/yaml_merge.py /var/www/fence/fence-config-bonus1.yaml /var/www/fence/fence-config-step1.yaml > /var/www/fence/fence-config.yaml
            ([[ ! -f /entrypoint.sh ]] || bash /entrypoint.sh) && /fence/dockerrun.bash && if [[ -f /dockerrun.sh ]]; then /dockerrun.sh; fi
      - name: nginx-prometheus-exporter-wrapper
        GEN3_NGINX_PROMETHEUS_EXPORTER_WRAPPER_IMAGE|-image: quay.io/cdis/nginx-prometheus-exporter-wrapper:pybase3-1.4.0-|
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            nginx_status_response=$(curl -L -s -o /dev/null -w "%{http_code}" -X GET http://localhost/nginx_status)
            if [ "$nginx_status_response" != 200 ]; then
              sleep infinity
            else
              /usr/bin/exporter -nginx.scrape-uri http://127.0.0.1/nginx_status
            fi
        ports:
        - containerPort: 9113
      - name: uwsgi-exporter
        GEN3_UWSGI_EXPORTER_IMAGE|-image: registry.hub.docker.com/timonwong/uwsgi-exporter:v1.0.0-|
        args: ["--stats.uri", "http://127.0.0.1/uwsgi_status"]
        ports:
        - containerPort: 9117
      - name: nginx-logs-exporter
        GEN3_NGINX_LOGS_EXPORTER_IMAGE|-image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.7.1-|
        args: ["/mnt/nginxlogs/access_not_json.log"]
        ports:
        - containerPort: 4040
        volumeMounts:
        - name: logs-folder
          mountPath: "/mnt/nginxlogs/"
