apiVersion: apps/v1
kind: Deployment
metadata:
  name: thor-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: thor
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: thor
        public: "yes"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - thor
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: thor
        GEN3_THOR_IMAGE
        env:
        - name: RUNNING_IN_QAPLANETV1
          value: "true"
        - name: JENKINS_USERNAME
          value: "PlanXCyborg"
        - name: JENKINS_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "jenkins_api_token.json"
        - name: JENKINS_JOB_TOKEN
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "jenkins_job_token.json"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "github_token.json"
        - name: JIRA_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "jira_api_token.json"
        - name: SLACK_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "slacktoken.json"
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: thor-g3auto
              key: "slack_webhook.json"
        imagePullPolicy: Always
        volumeMounts:
          - name: config-volume-g3auto
            readOnly: true
            mountPath: /src/thor.env
            subPath: thor.env
      volumes:
        - name: config-volume-g3auto
          secret:
            secretName: thor-g3auto
      initContainers:
        - name: thor-db-create
          GEN3_THOR_IMAGE
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume-g3auto
              readOnly: true
              mountPath: /src/thor.env
              subPath: thor.env
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              /env/bin/python /src/src/thor/create_all_tables.py
