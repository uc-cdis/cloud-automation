apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: namenode-deployment
spec:
  serviceName: "namenode"
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
      - name: namenode
        image: "quay.io/cdis/namenode:v3.3.0"
        ports:
        - containerPort: 9000
        - containerPort: 8020
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        env:
        - name: CLUSTER_NAME
          value: "gen3"
        volumeMounts:
        - name: namenode-pv-storage
          mountPath: /hadoop/dfs/name
        imagePullPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: namenode-pv-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: datanode-deployment
spec:
  serviceName: "datanode"
  replicas: 1
  selector:
    matchLabels:
      app: datanode
  template:
    metadata:
      labels:
        app: datanode
    spec:
      containers:
      - name: datanode
        image: "quay.io/cdis/datanode:v3.3.0"
        ports:
        - containerPort: 50010
        - containerPort: 8020
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        volumeMounts:
        - name: datanode-pv-storage
          mountPath: /hadoop/dfs/data
        imagePullPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: datanode-pv-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"
      resources:
        requests:
          storage: 100Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourcemanager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - resourcemanager
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: resourcemanager
        image: "quay.io/cdis/resourcemanager:v3.3.0"
        ports:
        - containerPort: 8088
        - containerPort: 8020
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        imagePullPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodemanager-deployment
spec:
  replicas: 2  # Adjust based on your needs
  selector:
    matchLabels:
      app: nodemanager
  template:
    metadata:
      labels:
        app: nodemanager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nodemanager
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: nodemanager
        image: "quay.io/cdis/nodemanager:v3.3.0"
        ports:
        - containerPort: 8042
        - containerPort: 8020
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        imagePullPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-master-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-master
  template:
    metadata:
      labels:
        app: spark-master
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - spark-master
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: spark-master
        image: "quay.io/cdis/spark-master:3.3.0-hadoop3.3"
        ports:
        - containerPort: 7077
        - containerPort: 8080
        - containerPort: 6066
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        env:
        - name: SPARK_MASTER
          value: "spark-master"
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_EXECUTOR_MEMORY
          value: 3g
        - name: SPARK_WORKER_MEMORY
          value: 3g
        - name: SPARK_DRIVER_MEMORY
          value: 2g
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 2
            memory: 10Gi
          requests:
            cpu: 2
            memory: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-worker-deployment
spec:
  replicas: 2  # Adjust based on your needs
  selector:
    matchLabels:
      app: spark-worker
  template:
    metadata:
      labels:
        app: spark-worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - spark-worker
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: spark-worker
        image: quay.io/cdis/spark-worker:3.3.0-hadoop3.3
        ports:
        - containerPort: 8081
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        imagePullPolicy: Always
        env:
        - name: SPARK_MASTER
          value: "spark://spark-master:7077"
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_EXECUTOR_MEMORY
          value: 3g
        - name: SPARK_WORKER_MEMORY
          value: 3g
        - name: SPARK_DRIVER_MEMORY
          value: 2g
        resources:
          limits:
            cpu: 2
            memory: 10Gi
          requests:
            cpu: 2
            memory: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-submit-deployment
spec:
  replicas: 2  # Adjust based on your needs
  selector:
    matchLabels:
      app: spark-submit
  template:
    metadata:
      labels:
        app: spark-submit
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - spark-submit
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      containers:
      - name: spark-submit
        image: quay.io/cdis/spark-submit:3.3.0-hadoop3.3
        ports:
        - containerPort: 8081
        envFrom:
        - configMapRef:
            name: hadoop-spark-config
        imagePullPolicy: Always
        env:
        - name: SPARK_MASTER
          value: "spark://spark-master:7077"
        - name: SPARK_MASTER_PORT
          value: "7077"
        resources:
          limits:
            cpu: 2
            memory: 10Gi
          requests:
            cpu: 2
            memory: 10Gi
