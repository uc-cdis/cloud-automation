apiVersion: apps/v1 
kind: Deployment
metadata:
  name: indexd-canary-deployment
  annotations:
    gen3.io/network-ingress: "fence,fenceshib,peregrine,sheepdog"  
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: indexd
      release: canary
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: indexd
        release: canary
        public: "yes"
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - indexd
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
        - name: config-volume
          secret:
            secretName: "indexd-secret"
        - name: creds-volume
          secret:
            secretName: "indexd-creds"
        - name: config-helper
          configMap:
            name: config-helper
        - name: cert-volume
          secret:
            secretName: "cert-indexd-service"
        - name: ca-volume
          secret:
            secretName: "service-ca"
      containers:
      - name: indexd
        GEN3_INDEXD-CANARY_IMAGE|-GEN3_INDEXD_IMAGE-|
        env:
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /_status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
          - name: "config-volume"
            readOnly: true
            mountPath: "/var/www/indexd/local_settings.py"
            subPath: "local_settings.py"
          - name: "creds-volume"
            readOnly: true
            mountPath: "/var/www/indexd/creds.json"
            subPath: creds.json
          - name: "config-helper"
            readOnly: true
            mountPath: "/var/www/indexd/config_helper.py"
            subPath: config_helper.py
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.crt"
            subPath: "service.crt"
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.key"
            subPath: "service.key"
          - name: "ca-volume"
            # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
            readOnly: true
            mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
            subPath: "ca.pem"
