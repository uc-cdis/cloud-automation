apiVersion: apps/v1
kind: Deployment
metadata:
  name: gen3-discovery-ai-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: gen3-discovery-ai
      release: production
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: gen3-discovery-ai
        release: production
        GEN3_DATE_LABEL
    spec:
      serviceAccountName: gen3-discovery-ai-sa
      volumes:
        - name: gen3-discovery-ai-g3auto-volume
          secret:
            secretName: gen3-discovery-ai-g3auto
        - name: gen3-discovery-ai-knowledge-library-volume
          emptyDir: {}
      initContainers:
      # configmaps mount to read-only volumes and chromadb's persisted disk 
      # excepts the ability to write.
      #
      # Solution: utilize emptyDir as a writable space.
      #
      # Procedure: in init container, mount configmap into readonly space, copy files to writable
      #            space in emptyDir, use files from writable in final container
      - name: gen3-discovery-ai-init
        GEN3_GEN3-DISCOVERY-AI_IMAGE
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
          - name: ANONYMIZED_TELEMETRY
            value: "False"
        volumeMounts:
          - name: gen3-discovery-ai-g3auto-volume
            readOnly: true
            mountPath: /gen3discoveryai/.env
            subPath: env
          - name: gen3-discovery-ai-g3auto-volume
            readOnly: true
            mountPath: /gen3discoveryai/storage_config.json
            subPath: storage_config.json
          - name: gen3-discovery-ai-knowledge-library-volume
            mountPath: /gen3discoveryai/knowledge
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 1
          limits:
            cpu: 2
            memory: 512Mi
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            bucketName=$(grep -o "\"bucket\": *\"[^\"]*\"" /gen3discoveryai/storage_config.json | awk -F'"' '{print $4}')
            echo "BUCKET: $bucketName
            echo
            echo BEFORE aws s3 ls $bucketName
            aws s3 ls $bucketName 
            echo
            echo BEFORE /gen3discoveryai/knowledge  
            ls -Ra /gen3discoveryai/knowledge 
            echo
            echo RUN aws s3 sync "s3://${bucketName}/chromadb" "/gen3discoveryai/knowledge"
            aws s3 sync "s3://${bucketName}/chromadb" "/gen3discoveryai/knowledge"
            echo
            echo AFTER aws s3 ls $bucketName 
            aws s3 ls $bucketName 
            echo
            echo AFTER /gen3discoveryai/knowledge 
            ls -Ra /gen3discoveryai/knowledge
      containers:
      - name: gen3-discovery-ai
        GEN3_GEN3-DISCOVERY-AI_IMAGE
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
          - name: ANONYMIZED_TELEMETRY
            value: "False"
        volumeMounts:
          - name: gen3-discovery-ai-g3auto-volume
            readOnly: true
            mountPath: /gen3discoveryai/.env
            subPath: env
          - name: gen3-discovery-ai-knowledge-library-volume
            mountPath: /gen3discoveryai/knowledge
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 1
          limits:
            cpu: 2
            memory: 512Mi