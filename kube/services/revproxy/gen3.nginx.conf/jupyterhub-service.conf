
          # This works if the JupyterHub service is enabled
          # The JupyterHub service is set to use REMOTE_USER auth
          # So it trusts that the user is authenticated if the header
          # is set and passed in
          location /lw-workspace/ {
              auth_request /auth-proxy;
              auth_request_set $remoteUser $upstream_http_REMOTE_USER;
              auth_request_set $saved_set_cookie $upstream_http_set_cookie;
              if ($saved_set_cookie != "") {
                  add_header Set-Cookie $saved_set_cookie always;
              }
              proxy_set_header REMOTE_USER $remoteUser;
              error_page 401 = @error401;

              # Use this variable so nginx won't error out on start
              # if not using the jupyterhub service
              # this isn't dev namespace friendly, must be manually updated
              set $upstream_jh http://jupyterhub-service.$namespace.svc.cluster.local:8000;
              proxy_pass $upstream_jh;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              client_max_body_size 0;
          }

          # JupyterHub doesn't currently support chaining logout pages
          # So route the jupyterhub logout to the fence logout path
          # Fence is hence responsible for clearing all cookies
          location = /lw-workspace/hub/logout {
              return 301 $scheme://$host/user/logout?next=/;
          }
