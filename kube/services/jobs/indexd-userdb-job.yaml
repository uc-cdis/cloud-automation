apiVersion: batch/v1
kind: Job
metadata:
  # 
  # A little helper jobs for creating new indexd
  # users with basic-auth access to indexd update
  # endpoints.
  # Loads the list of users from the indexd
  # creds.json
  #
  name: indexd-userdb
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      automountServiceAccountToken: false
      volumes:
        - name: config-volume
          secret:
            secretName: "indexd-secret"
        - name: "sheepdog-creds-volume"
          secret:
            secretName: "sheepdog-creds"
        - name: "indexd-creds-volume"
          secret:
            secretName: "indexd-creds"
        - name: config-helper
          configMap:
            name: config-helper
      containers:
        - name: indexd
          GEN3_INDEXD_IMAGE
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/var/www/indexd/local_settings.py"
              subPath: "local_settings.py"  
            - name: "sheepdog-creds-volume"
              readOnly: true
              mountPath: "/var/www/indexd/sheepdog_creds.json"
              subPath: creds.json
            - name: "indexd-creds-volume"
              readOnly: true
              mountPath: "/var/www/indexd/creds.json"
              subPath: creds.json
            - name: "config-helper"
              readOnly: true
              mountPath: "/var/www/indexd/config_helper.py"
              subPath: config_helper.py  
          imagePullPolicy: Always
          command: ["/bin/bash" ]
          args: 
            - "-c"
            # Script always succeeds if it runs (echo exits with 0)
            # indexd image does not include jq, so use python 
            - |
              eval $(python 2> /dev/null <<EOM
              import json

              sheepdog_data = json.load(open('/var/www/indexd/sheepdog_creds.json', 'r'))
              indexd_data = json.load(open('/var/www/indexd/creds.json', 'r'))
              user_db = { 'gdcapi': sheepdog_data['indexd_password'] }
              if 'user_db' in indexd_data:
                more_users = indexd_data['user_db']
                for user in more_users:
                  user_db[user] = more_users[user]
              print('declare -A user_db')
              for user in user_db:
                print("user_db['%s']='%s'" % (user, user_db[user]))
              EOM
              )
              for user in "${!user_db[@]}"; do
                python /indexd/bin/index_admin.py create --username "$user" --password "${user_db[$user]}"
              done
              echo "Exit code: $?"
      restartPolicy: Never
