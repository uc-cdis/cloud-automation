# Run: gen3 job run cogwheel-register-client
#
# This will set up a client in the Cogwheel database,
#   client_name="fence-client",
#   redirect_uris=["https://[your-hostname]/user/login/cognito/login/"]
#
# You must then look in the database for your client and get the creds.

apiVersion: batch/v1
kind: Job
metadata:
  name: cogwheel-register-client
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      volumes:
        - name: cogwheel-g3auto
          secret:
            secretName: cogwheel-g3auto
      containers:
        - name: cogwheel
          GEN3_COGWHEEL_IMAGE|-image: quay.io/cdis/cogwheel:master-|
          imagePullPolicy: Always
          env:
          - name: HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: CLIENT_NAME
            value: "fence-client"
          command: ["poetry", "run", "python", "src/register_client.py"]
          args: ["--name=$(CLIENT_NAME)", "--redirect_uri=https://$(HOSTNAME)/user/login/cognito/login/"]
          volumeMounts:
          - mountPath: "/etc/cogwheel/wsgi_settings.py"
            subPath: "wsgi_settings.py"
            name: cogwheel-g3auto
          - mountPath: "/etc/cogwheel/oauth2_metadata.json"
            subPath: "oauth2_metadata.json"
            name: cogwheel-g3auto
      restartPolicy: Never
