apiVersion: batch/v1
kind: Job
metadata:
  name: hatchery-metrics
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND     
      restartPolicy: Never
      serviceAccountName: hatchery-service-account
      securityContext:
        fsGroup: 1000
      containers:
        - name: awshelper
          GEN3_AWSHELPER_IMAGE|-image: quay.io/cdis/awshelper:master-|
          imagePullPolicy: Always
          env:
            - name: KUBECTL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: slackWebHook
              valueFrom:
                configMapKeyRef:
                  name: global
                  key: slack_webhook
                  optional: true
            - name: gen3Hostname
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: hostname
            - name: JENKINS_HOME
              value: "whatever"
          command: ["/bin/bash" ]
          args:
            - "-c"
            - |
              export GEN3_HOME="$HOME/cloud-automation"
              source "$GEN3_HOME/gen3/gen3setup.sh"
              if data="$(gen3 jupyter metrics | jq -r '.data.result[] | .metric.pod + "," + .value[1]')" \
                && [[ 0 == "${PIPESTATUS[0]}" ]] \
                && [[ -n "$data" && -n "$slackWebHook" && "$slackWebHook" != "None" ]]; then
                curl -X POST --data-urlencode "payload={\"text\": \"hatchery-metrics in $gen3Hostname: \n\`\`\`\n${data}\n\`\`\`\"}" "${slackWebHook}"
              fi
              echo "All Done!"
