apiVersion: batch/v1
kind: Job
metadata:
  name: arborist-rm-expired-access
spec:
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      dnsConfig:
        options:
        - name: use-vc
        - name: single-request-reopen
      dnsPolicy: ClusterFirst
      volumes:
        - name: arborist-secret
          secret:
            secretName: "arborist-g3auto"
      containers:
      - name: arborist
        GEN3_ARBORIST_IMAGE
        imagePullPolicy: Always
        volumeMounts:
        - name: "arborist-secret"
          readOnly: true
          mountPath: "/var/www/arborist/dbcreds.json"
          subPath: dbcreds.json
        command: ["sh"]
        args:
        - "-c"
        - |
            # set env vars
            export PGDATABASE=$(cat /var/www/arborist/dbcreds.json | jq -r '.db_database')
            export PGUSER=$(cat /var/www/arborist/dbcreds.json | jq -r '.db_username')
            export PGPASSWORD=$(cat /var/www/arborist/dbcreds.json | jq -r '.db_password')
            export PGHOST=$(cat /var/www/arborist/dbcreds.json | jq -r '.db_host')
            export PGPORT="5432"
            export PGSSLMODE="disable"

            # run job to remove expired access from the database
            /go/src/github.com/uc-cdis/arborist/jobs/delete_expired_access
      restartPolicy: Never
