#
# run with:
# gen3 runjob gentestdata \
# SUBMISSION_USER submission_user \
# TEST_PROGRAM "" \
# TEST_PROJECT "" \
# MAX_EXAMPLES "" \
# NOTE: "" indicates an optional argument. Leave as "" for default
#
# SUBMISSION_USER
#    e-mail of user-account to submit the data to sheepdog as
#
# TEST_PROJECT(optional)
#   Name of test project. Default: DEV/test
#
# MAX_EXAMPLES(optional)
#   Number of maximum examples for each node. Default 100
#
# Example
# gen3 runjob gentestdata TEST_PROGRAM DEV TEST_PROJECT test MAX_EXAMPLES 100 SUBMISSION_USER cdistest@gmail.com
#
apiVersion: batch/v1
kind: Job
metadata:
  name: gentestdata
spec:
  # not yet supported - backOffLimit: 3
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      serviceAccountName: useryaml-job
      volumes:
        - name: shared-data
          emptyDir: {}
# -----------------------------------------------------------------------------
# DEPRECATED! Remove when all commons are no longer using local_settings.py
#             for fence.
# -----------------------------------------------------------------------------
        - name: old-config-volume
          secret:
            secretName: "fence-secret"
        - name: creds-volume
          secret:
            secretName: "fence-creds"
        - name: config-helper
          configMap:
            name: config-helper
        - name: json-secret-volume
          secret:
            secretName: "fence-json-secret"
# -----------------------------------------------------------------------------
        - name: config-volume
          secret:
            secretName: "fence-config"
        - name: fence-jwt-keys
          secret:
            secretName: "fence-jwt-keys"
      containers:
      - name: auto-qa
        image: quay.io/cdis/auto-qa:master
        imagePullPolicy: Always
        env:
          - name: PYTHONPATH
            value: /var/www/fence
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          - name: HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: global
                key: hostname
          - name: TEST_PROGRAM
            GEN3_TEST_PROGRAM
          - name: TEST_PROJECT
            GEN3_TEST_PROJECT
          - name: MAX_EXAMPLES
            GEN3_MAX_EXAMPLES
        volumeMounts:
          - name: shared-data
            mountPath: /mnt/shared
        command: ["/bin/bash" ]
        args:
          - "-c"
          - |
            let count=0
            while [[ ! -f /mnt/shared/access_token.txt && $count -lt 50 ]]; do
              echo "waiting for /mnt/shared/access_token.txt";
              sleep 2
              let count=$count+1
            done

            mkdir -p /gen3-qa/python-scripts/sim-data-code/TestData

            cd /gen3-qa/python-scripts/sim-data-code/
            rscript_cmd="/gen3-qa/python-scripts/sim-data-code/GenTestDataCmd.R $DICTIONARY_URL"

            if [[ -n "$TEST_PROJECT" ]]; then
                rscript_cmd+=" $TEST_PROJECT"
            else
                rscript_cmd+=" test"
            fi
            if [[ -n "$MAX_EXAMPLES" ]]; then
                rscript_cmd+=" $MAX_EXAMPLES"
            else
                rscript_cmd+=" 100"
            fi

            rscript_cmd+=" /gen3-qa/python-scripts/sim-data-code/TestData/"
            echo ${rscript_cmd}
            Rscript ${rscript_cmd}
            echo "Preparing to submit data"
            python /gen3-qa/python-scripts/scripts.py data-create --host https://$HOSTNAME --dir /gen3-qa/python-scripts/sim-data-code/TestData/ --project "$TEST_PROGRAM/$TEST_PROJECT" --access_token /mnt/shared/access_token.txt
            echo "All Done - always succeed to avoid k8s retries"
      - name: fence
        GEN3_FENCE_IMAGE
        imagePullPolicy: Always
        env:
          - name: PYTHONPATH
            value: /var/www/fence
          - name: SUBMISSION_USER
            GEN3_SUBMISSION_USER
        volumeMounts:
          - name: shared-data
            mountPath: /mnt/shared
# -----------------------------------------------------------------------------
# DEPRECATED! Remove when all commons are no longer using local_settings.py
#             for fence.
# -----------------------------------------------------------------------------
          - name: "old-config-volume"
            readOnly: true
            mountPath: "/var/www/fence/local_settings.py"
            subPath: local_settings.py
          - name: "creds-volume"
            readOnly: true
            mountPath: "/var/www/fence/creds.json"
            subPath: creds.json
          - name: "config-helper"
            readOnly: true
            mountPath: "/var/www/fence/config_helper.py"
            subPath: config_helper.py
          - name: "json-secret-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence_credentials.json"
            subPath: fence_credentials.json
# -----------------------------------------------------------------------------
          - name: "config-volume"
            readOnly: true
            mountPath: "/var/www/fence/fence-config.yaml"
            subPath: fence-config.yaml
          - name: "fence-jwt-keys"
            readOnly: true
            mountPath: "/fence/jwt-keys.tar"
            subPath: "jwt-keys.tar"
          - name: shared-data
            mountPath: /mnt/shared
        command: ["/bin/bash" ]
        args:
            - "-c"
            - |
              if [ -f /fence/jwt-keys.tar ]; then
                cd /fence
                tar xvf jwt-keys.tar
                if [ -d jwt-keys ]; then
                  mkdir -p keys
                  mv jwt-keys/* keys/
                fi
              fi
              echo "generate access token"
              echo "fence-create --path fence token-create --type access_token --username $SUBMISSION_USER  --scopes openid,user,test-client --exp 3600"
              fence-create --path fence token-create --type access_token --username $SUBMISSION_USER  --scopes openid,user,test-client --exp 3600 > /mnt/shared/access_token.txt
              echo "All Done - always succeed to avoid k8s retries"
      restartPolicy: Never
