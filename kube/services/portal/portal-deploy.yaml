apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: portal-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: portal
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: portal
        public: "yes"
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - portal
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
      - name: cert-volume
        secret:
          secretName: "cert-portal-service"
      - name: ca-volume
        secret:
          secretName: "service-ca"
      - name: config-volume
        secret:
          secretName: "portal-config"
      - name: sponsor-img-volume
        secret:
          secretName: "portal-sponsor-config"
      - name: privacy-policy
        configMap:
          name: "privacy-policy"
      containers:
      - name: portal
        GEN3_PORTAL_IMAGE
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 30
          # portal sometimes takes a long time to come up ... -
          # has to fetch the dictionary, relay compile, etc
          failureThreshold: 6
        ports:
        - containerPort: 80
        - containerPort: 443
        command:
          - /bin/bash
          - ./dockerStart.sh
        env:
          - name: HOSTNAME
            value: revproxy-service
          - name: APP
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: portal_app
          - name: LOGOUT_INACTIVE_USERS
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: logout_inactive_users
                optional: true
          - name: WORKSPACE_TIMEOUT_IN_MINUTES
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: workspace_timeout_in_minutes
                optional: true
          - name: TIER_ACCESS_LEVEL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                # acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
                key: tier_access_level
                # for now making it optional so won't break anything
                optional: true
          - name: TIER_ACCESS_LIMIT
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: tier_access_limit
                optional: true
          - name: FENCE_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: fence_url
                optional: true
          - name: INDEXD_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: indexd_url
                optional: true
          - name: PRIVACY_POLICY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: privacy_policy_url
                optional: true
        volumeMounts:
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.crt"
            subPath: "service.crt"
          - name: "cert-volume"
            readOnly: true
            mountPath: "/mnt/ssl/service.key"
            subPath: "service.key"
          - name: "ca-volume"
            readOnly: true
            mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
            subPath: "ca.pem"
          - name: "config-volume"
            mountPath: "/data-portal/data/config/gitops.json"
            subPath: "gitops.json"
          - name: "config-volume"
            mountPath: "/data-portal/custom/logo/gitops-logo.png"
            subPath: "gitops-logo.png"
          - name: "config-volume"
            mountPath: "/data-portal/custom/createdby/gitops.png"
            subPath: "gitops-createdby.png"
          - name: "config-volume"
            mountPath: "/data-portal/custom/favicon/gitops-favicon.ico"
            subPath: "gitops-favicon.ico"
          - name: "config-volume"
            mountPath: "/data-portal/custom/css/gitops.css"
            subPath: "gitops.css"
          - name: "sponsor-img-volume"
            mountPath: "/data-portal/custom/sponsors/gitops-sponsors"
          - name: "privacy-policy"
            readOnly: true
            mountPath: "/data-portal/custom/privacy_policy.md"
            subPath: "privacy_policy.md"
        readinessProbe:
          httpGet:
            path: /
            port: 80
        imagePullPolicy: Always
