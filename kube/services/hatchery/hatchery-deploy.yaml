apiVersion: apps/v1
kind: Deployment
metadata:
  name: hatchery-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: hatchery
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: hatchery
        public: "yes"
        netnolimit: "yes"
        userhelper: "yes"
        tags.datadoghq.com/service: "hatchery"
        GEN3_HATCHERY_VERSION
        GEN3_ENV_LABEL
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hatchery
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      serviceAccountName: hatchery-service-account
      securityContext:
        fsGroup: 1001
      volumes:
        - name: hatchery-config
          configMap:
            name: manifest-hatchery
      containers:
      - name: hatchery
        GEN3_HATCHERY_IMAGE
        livenessProbe:
          httpGet:
            path: /_status
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /_status
            port: 8000
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
          - name: GEN3_VPCID
            valueFrom:
              configMapKeyRef:
                name: global
                key: environment
          - name: GEN3_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: hostname
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DD_ENABLED
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dd_enabled
                optional: true
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
          - name: DD_TRACE_SAMPLE_RATE
            value: "1"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: PRISMA_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: prisma-secret
                key: AccessKeyId 
                optional: true
          - name: PRISMA_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: prisma-secret
                key: SecretKey
                optional: true
        volumeMounts:
          - name: hatchery-config
            readOnly: true
            mountPath: /hatchery.json
            subPath: json
          - name: hatchery-config
            readOnly: true
            mountPath: /hatchery-more-configs
