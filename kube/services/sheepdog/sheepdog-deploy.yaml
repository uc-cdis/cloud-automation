apiVersion: apps/v1
kind: Deployment
metadata:
  name: sheepdog-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: sheepdog
      release: production
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        netnolimit: "yes"
        app: sheepdog
        release: production
        public: "yes"
        # to download dictionary
        s3: "yes"
        tags.datadoghq.com/service: "sheepdog"
        GEN3_ENV_LABEL
        GEN3_SHEEPDOG_VERSION
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sheepdog
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - SPOT                         
      automountServiceAccountToken: false
      volumes:
        - name: config-volume
          secret:
            secretName: "sheepdog-secret"
        - name: creds-volume
          secret:
            secretName: "sheepdog-creds"
        - name: config-helper
          configMap:
            name: config-helper
        - name: cert-volume
          secret:
            secretName: "cert-sheepdog-service"
        - name: ca-volume
          secret:
            secretName: "service-ca"
      # sheepdog transactions take forever -
      # try to let the complete before termination
      terminationGracePeriodSeconds: 50
      containers:
        - name: sheepdog
          GEN3_SHEEPDOG_IMAGE
          livenessProbe:
            httpGet:
              path: /_status?timeout=20
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status?timeout=2
              port: 80
          ports:
          - containerPort: 80
          - containerPort: 443
          env:
          - name: GEN3_UWSGI_TIMEOUT
            value: "600"
          - name: DD_ENABLED
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dd_enabled
                optional: true
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
          - name: DD_TRACE_SAMPLE_RATE
            value: "1"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url
          # Signpost is deprecated; replace this w INDEX_CLIENT_HOST block
          - name: SIGNPOST_HOST
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: indexd_url
                optional: true
          - name: INDEX_CLIENT_HOST
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: indexd_url
                optional: true
          - name: FENCE_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: fence_url
                optional: true
          - name: ARBORIST_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: arborist_url
                optional: true
          - name: AUTH_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: auth_namespace
                optional: true
          - name: REQUESTS_CA_BUNDLE
            #
            # override python 'requests' SSL certificate bundle
            # to use system trusted certs
            # which includes our private certificate authority
            #
            value: /etc/ssl/certs/ca-certificates.crt
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/var/www/sheepdog/wsgi.py"
              subPath: "wsgi.py"
            - name: "creds-volume"
              readOnly: true
              mountPath: "/var/www/sheepdog/creds.json"
              subPath: creds.json
            - name: "config-helper"
              readOnly: true
              mountPath: "/var/www/sheepdog/config_helper.py"
              subPath: config_helper.py
            - name: "cert-volume"
              readOnly: true
              mountPath: "/mnt/ssl/service.crt"
              subPath: "service.crt"
            - name: "cert-volume"
              readOnly: true
              mountPath: "/mnt/ssl/service.key"
              subPath: "service.key"
            - name: "ca-volume"
              # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
              readOnly: true
              mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
              subPath: "ca.pem"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 0.8
              memory: 1024Mi
            limits:
              cpu: 2
              memory: 2048Mi
