apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: metadata
      release: production
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: metadata
        release: production
        public: "yes"
        # allow access from workspaces
        userhelper: "yes"
        # for network policy
        netnolimit: "yes"
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - metadata
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - spot
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - SPOT
      automountServiceAccountToken: false
      volumes:
        - name: config-volume-g3auto
          secret:
            secretName: metadata-g3auto
        # This volume may or may not be needed or available. See kube-setup-metadata.sh and note that this
        # is only available if a <manifest dir>/metadata directory exists.
        - name: config-volume
          secret:
            secretName: metadata-config
            optional: true
        # This volume may or may not be needed or available. See kube-setup-metadata.sh and note that this
        # may not exist if the commons does not have any metadata manifest configuration.
        - name: config-manifest
          configMap:
            name: manifest-metadata
            optional: true
      containers:
      - name: metadata
        GEN3_METADATA_IMAGE
        env:
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
          - name: GEN3_ES_ENDPOINT
            value: http://esproxy-service:9200
          - name: USE_AGG_MDS
            valueFrom:
              configMapKeyRef:
                name: manifest-metadata
                key: USE_AGG_MDS
                optional: true
          - name: AGG_MDS_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: manifest-metadata
                key: AGG_MDS_NAMESPACE
                optional: true
          - name: AGG_MDS_DEFAULT_DATA_DICT_FIELD
            valueFrom:
              configMapKeyRef:
                name: manifest-metadata
                key: AGG_MDS_DEFAULT_DATA_DICT_FIELD
                optional: true
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /_status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /_status
            port: 80
        ports:
        - containerPort: 80
        volumeMounts:
          - name: config-volume-g3auto
            readOnly: true
            mountPath: /src/.env
            subPath: metadata.env
          - name: config-volume
            readOnly: true
            mountPath: /aggregate_config.json
            subPath: aggregate_config.json
          - name: config-manifest
            readOnly: true
            mountPath: /metadata.json
            subPath: json
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 512Mi
      initContainers:
        - name: metadata-db-migrate
          GEN3_METADATA_IMAGE
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume-g3auto
              readOnly: true
              mountPath: /src/.env
              subPath: metadata.env
          resources:
            limits:
              cpu: 0.8
              memory: 512Mi
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              /env/bin/alembic upgrade head
