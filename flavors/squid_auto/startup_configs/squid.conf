#give preference to ipv4 address lookups
# This is obsolete in v5
# Instead of obeying dns_v4_first settings, IP family usage order is now primarily controlled by DNS response time: If a DNS AAAA response comes first while Squid is waiting for an IP address, then Squid will use the received IPv6 address(es) first. For previously cached IPs, Squid tries IPv6 addresses first. To control IP address families used by Squid, admins are expected to use firewalls, DNS recursive-resolver configuration, and/or --disable-ipv6. When planning you configuration changes, please keep in mind that the upcoming Happy Eyeballs improvements will favor faster TCP connection establishment, decreasing the impact of DNS resolution timing.
#dns_v4_first on

#Because we just use one ACL for the whitelists, there can be
#NO repetitions in the matches.  If there is a wildcard that
#matches an explicit domain, it WILL error and squid will not
#start.
#To test to make sure you don't have an error without restarting
#squid, type 'squid -k check'
acl web_whitelist dstdomain "/etc/squid/web_whitelist"
acl web_whitelist dstdomain "/etc/squid/web_wildcard_whitelist"
acl https_whitelist ssl::server_name "/etc/squid/web_whitelist"
acl https_whitelist ssl::server_name "/etc/squid/web_wildcard_whitelist"

http_port 3128 name=explicit

http_port 3129 intercept # We may be able to go without this
#part, and just redirect the 80 traffic to 3130, but haven't
#tested it yet

http_access allow web_whitelist

https_port 3130 cert=/etc/squid/ssl/squid.pem ssl-bump intercept name=transparent

acl CONNECT method CONNECT

acl ssl_ports port 443
acl ssl_ports port 8443
acl plain_ports port 80
acl plain_ports port 8443
acl transparent_clients myportname transparent
acl explicit_clients myportname explicit

#The goal here is to let clients that explicitly proxy connect
#to anything on the whitelist on insecure ports, or secure ones
http_access allow explicit_clients plain_ports web_whitelist
http_access allow explicit_clients ssl_ports web_whitelist

#And here we allow transparent proxying, but only to ssl ports
http_access allow transparent_clients ssl_ports 
http_access deny transparent_clients !ssl_ports 

acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3
ssl_bump peek step1 all
ssl_bump peek step2 https_whitelist
#ssl_bump peek step2 all
ssl_bump splice step3 https_whitelist
#ssl_bump splice step3 all
ssl_bump terminate step2 all

http_access deny all

persistent_request_timeout 5 seconds

pid_filename /var/run/squid/squid.pid

# vi:syntax=squid.conf
# allow websockets
http_upgrade_request_protocols websocket allow all


# http://www.squid-cache.org/Doc/config/logfile_rotate/
# Logs are sent too cloud watch, there is no need to keep them for too long in here and we could safe on storage allocation
logfile_rotate 5
